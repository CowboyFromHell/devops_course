#!/bin/bash
#set -eo pipefail

read -p "Name process or PID (default all): " prog 
### Replace all uppercase letters with lowercase
prog="$(echo "$prog" | tr [[:upper:]] [[:lower:]])" 

echo -e "Do you want run from sudo user?\nYou need superuser (root) privileges to see all the information."
read -p "Yes/No (default no): " answer
read -p "Number of lines for output (default all): " number_lines

### Checking for the contents of letters in a variable number_lines
if [[ ! -z "$number_lines" && "$number_lines" =~ [^0-9]+ ]]; then
	echo "Only digits"
	exit 2 ### Digits in number_lines
fi



#Get ip addresses
ip_addresses() {
	### /^([0-9.]+):.* ([A-Za-z_]+) ([0-9A-Za-z_/-]+).*/\1 \2 \3/ - this regular expression, finds in line ip, state and process (45.55.41.223 CLOSE_WAIT 44815/plugin_host-3)
	### 's/^\s*//' - this regular expression, replaces tabs with blanks 
	netstat_result="$(${1}netstat -tunapl | awk -v prog="$prog" '$0 ~ prog {print $5, $6, $7}' | sed -En 's/^([0-9.]+):.* ([A-Za-z_]+) ([0-9A-Za-z_/-]+).*/\1 \2 \3/p' | sort | uniq -c | sed -nE 's/^\s*//p'| sort -nr -k1)"
	### Checking netstat_result for emptiness
	if [[ ! -z "$netstat_result" ]]; then
		if [[ ! -z "$number_lines" ]]; then
			### Formatting the output if number_lines is not empty
			netstat_result="$(echo "$netstat_result" | head -n $number_lines)"
		fi
	else
		echo "Process \"$prog\" not found"
		exit 4 ### If netstat_result is empty
	fi
}


orgs(){
	### Checking variable prog
	if [[ -z "$prog" ]]; then
		echo -e "All:"
	else
		echo -e "\n${prog}:"
	fi
	while read IP; do		
		result="$(whois "$(echo $IP | awk '{print $2}')" | awk -F':' '/^Organization/ {print $2}')"
		### Checking organization
		if [[ ! -z "$result" ]]; then
			echo "$result $(echo $IP | awk '{printf(" (Process: %s; IP: %s; Count: %s; State: %s)", $4, $2, $1, $3)}')"
		else
			echo "   No rganization $(echo $IP | awk '{printf(" (Process: %s; IP: %s; Count: %s; State: %s)", $4, $2, $1, $3)}')"
		fi
	done <<< "$netstat_result"
}

#Checking the answer about SUDO
case $answer in
	"Yes"|"yes") 
				ip_addresses "sudo "
				orgs
				;;
	"No"|"no") 
				ip_addresses " "
				orgs
				;;
	[[:alnum:]]*)
				echo "Yes or No"
				exit 3 #Bad choice
				;;
	*)  ip_addresses " "
		orgs
				;;
esac


